import java.nio.file.Files
import java.nio.file.Paths

plugins {
    id 'java'
    id "io.freefair.lombok" version "8.4"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceCompatibility = 21
targetCompatibility = 21

dependencies {
    // create ascii tables
    implementation 'com.github.freva:ascii-table:1.8.0'

    testImplementation platform('org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.register("generateDay", Task) {
    doFirst {
        Files.createDirectory(Paths.get("$rootDir/src/main/java/me/frenz/day$day"))
        Files.createDirectory(Paths.get("$rootDir/src/test/java/me/frenz/day$day"))

        def dayFile = new File("$rootDir/src/main/java/me/frenz/day$day/Day${day}.java")
        dayFile.text = """
package me.frenz.day$day;

import me.frenz.Day;

import java.util.List;

public class Day$day extends Day<Integer, Integer> {

    public Day$day(List<String> input) {
        super(input);
    }

    @Override
    protected Integer part1() {
        return 0;
    }

    @Override
    protected Integer part2() {
        return 0;
    }

}
"""

        def dayFileTest = new File("$rootDir/src/test/java/me/frenz/day$day/Day${day}Test.java")
        dayFileTest.text = """
package me.frenz.day$day;

import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

class Day${day}Test {

    final List<String> input = \"\"\"
        \"\"\".lines().toList();

    @Test
    void testExampleA() {
        assertEquals(-1, new Day$day(input).part1());
    }

    @Test
    void testExampleB() {
        assertEquals(-1, new Day$day(input).part2());
    }
}
"""
    }
}
